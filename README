This is a small chunk of sequential logic to demonstrate synthesizable
Verilog to perform continuous division.  Latency is the number of
bits allocated to the 2's complement numerator.  A "valid" signal can be
latency-matched through the divider logic.

http://en.wikipedia.org/wiki/Division_algorithm#Integer_division_.28unsigned.29_with_remainder

The primary purpose of this code was to demonstrate/confirm (to myself)
the usefulness of Icarus Verilog.

http://iverilog.wikia.com/wiki/Main_Page

This demo will run just fine on a Raspberry Pi/raspbian platform.  E.g.

sudo apt-get install verilog
sudo apt-get install gtkwave
git clone https://github.com/staceycampbell/ldiv.git
cd ldiv
make
gtkwave ldiv.vcd

Stacey Campbell
staceycampbell@yahoo.com
http://stacey-campbell.com
